<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_controller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>since_left = 0;
since_right = 0;
dash_interval = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (since_left &gt; 0)
    since_left -= 1;
if (since_right &gt; 0)
    since_right -= 1;

right = keyboard_check(ord('D'));
up = keyboard_check(ord('W'));
left = keyboard_check(ord('A'));
down = keyboard_check(ord('S'));

rightP = keyboard_check_pressed(ord('D'));
upP = keyboard_check_pressed(ord('W'));
leftP = keyboard_check_pressed(ord('A'));
downP = keyboard_check_pressed(ord('S'));

block = keyboard_check(ord('T'));
punch = keyboard_check_pressed(ord('F'));
kick = keyboard_check_pressed(ord('G'));
special = keyboard_check_pressed(ord('H'));

specialH = keyboard_check(ord('H'));

pause = keyboard_check_pressed(vk_lshift);

goback = keyboard_check(ord('F')) &amp;&amp; keyboard_check(ord('G'));

left_dash = false;
right_dash = false;

if (keyboard_check_pressed(ord('A')))
{
    if (since_right &gt; 0)
        since_right = 0;
    
    if (since_left &gt; 0)
    {
        left_dash = true;
        since_left = 0;
    }
    else
        since_left = dash_interval;
}
else if (keyboard_check_pressed(ord('D')))
{
    if (since_left &gt; 0)
        since_left = 0;
    
    if (since_right &gt; 0)
    {
        right_dash = true;
        since_right = 0;
    }
    else
        since_right = dash_interval;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
