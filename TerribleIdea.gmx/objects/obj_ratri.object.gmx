<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ratri_stand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_fighter</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>characterIndex = 4;

//sprites
standSprite = spr_ratri_stand;
walkSprite = spr_ratri_walk;
blockSprite = spr_ratri_block;

jumpFSprite = spr_ratri_jump_forward;
jumpBSprite = spr_ratri_jump_back;

//stats
walk_speed = 3;
air_speed = 1.35;
fall_speed = .9;
jump_speed = 1.1;
dash_speed = 1.15;
fric = 1;
weight = .75;
max_health = 110;

//punch
attackSprites[0] = spr_ratri_punch;
fighter_add_attack(self.id, 0, 10, 5, 15, create_hitbox(self.id, .75, 1, .7, 1.8), 5, .45*pi);

//kick
attackSprites[1] = spr_ratri_kick;
fighter_add_attack(self.id, 1, 15, 10, 15, create_hitbox(self.id, 1.5, .75, .5, .8), 7.5, .30*pi);

//special
attackSprites[2] = spr_ratri_special;
fighter_add_projectile(self.id, 2, 5, 10, 10, obj_night);

//air punch
attackSprites[3] = spr_ratri_air_punch;
fighter_add_attack(self.id, 3, 10, 2, 30, create_hitbox(self.id, 1.5, 1.5, .75, 1.4), 5, 0);

//air kick
attackSprites[4] = spr_ratri_air_kick;
fighter_add_attack(self.id, 4, 15, 5, 30, create_hitbox(self.id, .75, 1.5, .5, .25), 7.5, -pi/2);

//air special
attackSprites[5] = spr_ratri_air_special;
fighter_add_projectile(self.id, 5, 10, 10, 10, obj_air_night);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite = noone;
frame = 0;
col = c_white;
xscale = 1;

if (fighter_on_ground(self))
{
    if (dashing)
    {
        if (hspeed * facing &lt;= 0)
            sprite = jumpBSprite;
        else
            sprite = jumpFSprite;
    }
    else
    {
        if (move_direction == 0)
            sprite = standSprite;
        else
        {
            sprite = walkSprite;
            frame = walkTimer mod 2;
            if (move_direction != facing)
                xscale = -1;
        }
    }
}
else
{
    if (move_direction * facing &lt;= 0)
        sprite = jumpBSprite;
    else
        sprite = jumpFSprite;
}

if (currentAttack != -1 &amp;&amp; attackSprites[currentAttack] != noone)
{
    sprite = attackSprites[currentAttack];
    if (attackProgress &gt; attackDurations[currentAttack, 1])
        frame = 2;
    else if (attackProgress &gt; attackDurations[currentAttack, 0])
        frame = 1;
}

if (blocking)
{
    sprite = blockSprite;
    col = c_ltgray;
}

if (sprite != noone)
{
    draw_sprite_ext(sprite, frame,
                x_convert(x), y_convert(y),
                facing*xscale,1,
                0, col, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>12,40</point>
    <point>20,20</point>
  </PhysicsShapePoints>
</object>
